
R : Copyright 2006, The R Foundation for Statistical Computing
Version 2.3.1 (2006-06-01)
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
>  library(aster)
Loading required package: trust
> 
>  do.chisq.test <- function(x, k, mu, max.bin) {
+      stopifnot(all(x > k))
+      xx <- seq(k + 1, max.bin)
+      yy <- dpois(xx, mu)
+      yy[length(yy)] <- ppois(max.bin - 1, mu, lower.tail = FALSE)
+      pp <- yy / sum(yy)
+      ecc <- length(x) * pp
+      if (any(ecc < 5.0))
+          warning("violates rule of thumb about > 5 expected in each cell")
+      cc <- tabulate(x, max.bin)
+      cc <- cc[xx]
+      chisqstat <- sum((cc - ecc)^2 / ecc)
+      cat("chi squared statistic =", chisqstat, "\n")
+      cat("degrees of freedom =", length(ecc) - 1, "\n")
+      pval <- pchisq(chisqstat, length(ecc) - 1, lower.tail = FALSE)
+      cat("p-value =", pval, "\n")
+      if (exists("save.min.pval")) {
+          save.min.pval <<- min(pval, save.min.pval)
+          save.ntests <<- save.ntests + 1
+      } else {
+          save.min.pval <<- pval
+          save.ntests <<- 1
+      }
+      foo <- rbind(cc, ecc)
+      dimnames(foo) <- list(c("observed", "expected"), as.character(xx))
+      print(foo)
+  }
> 
>  set.seed(42)
>  nsim <- 1e4
> 
>  mu <- 10
>  k <- 2
>  x <- rktp(nsim, k, mu)
>  do.chisq.test(x, k, mu, 22)
chi squared statistic = 16.05440 
degrees of freedom = 19 
p-value = 0.653645 
                3        4        5        6        7        8        9
observed 83.00000 193.0000 426.0000 658.0000 884.0000 1090.000 1273.000
expected 75.87668 189.6917 379.3834 632.3057 903.2938 1129.117 1254.575
               10       11       12       13       14       15       16
observed 1224.000 1102.000 963.0000 734.0000 497.0000 364.0000 228.0000
expected 1254.575 1140.523 950.4354 731.1042 522.2173 348.1448 217.5905
               17       18       19       20        21       22
observed 137.0000 68.00000 38.00000 18.00000 11.000000 9.000000
expected 127.9944 71.10802 37.42527 18.71264  8.910779 7.015935
> 
>  mu <- 3.5
>  k <- 2
>  x <- rktp(nsim, k, mu)
>  do.chisq.test(x, k, mu, 11)
chi squared statistic = 10.27000 
degrees of freedom = 8 
p-value = 0.2465843 
                3        4        5        6        7       8       9      10
observed 3098.000 2742.000 1970.000 1174.000 598.0000 269.000 105.000 28.0000
expected 3177.274 2780.115 1946.080 1135.214 567.6068 248.328  96.572 33.8002
               11
observed 11.00000
expected 15.00980
> 
>  mu <- 2.5
>  k <- 2
>  x <- rktp(nsim, k, mu)
>  do.chisq.test(x, k, mu, 10)
chi squared statistic = 9.56369 
degrees of freedom = 7 
p-value = 0.2146759 
                3        4        5        6        7        8        9
observed 4677.000 2957.000 1485.000 588.0000 220.0000 47.00000 20.00000
expected 4685.865 2928.666 1464.333 610.1387 217.9067 68.09583 18.91551
               10
observed 3.000000
expected 6.079791
> 
>  mu <- 1.5
>  k <- 2
>  x <- rktp(nsim, k, mu)
>  do.chisq.test(x, k, mu, 8)
chi squared statistic = 1.306107 
degrees of freedom = 5 
p-value = 0.934302 
                3        4        5        6        7         8
observed 6555.000 2461.000 747.0000 190.0000 35.00000 11.000000
expected 6565.976 2462.241 738.6723 184.6681 39.57173  8.870673
> 
>  mu <- 0.5
>  k <- 2
>  x <- rktp(nsim, k, mu)
>  do.chisq.test(x, k, mu, 6)
chi squared statistic = 0.578729 
degrees of freedom = 3 
p-value = 0.9012841 
                3        4        5        6
observed 8780.000 1092.000 117.0000 9.000000
expected 8782.554 1097.819 109.7819 9.845187
> 
>  nsim <- 1e5
>  mu <- 0.1
>  k <- 2
>  x <- rktp(nsim, k, mu)
>  do.chisq.test(x, k, mu, 5)
chi squared statistic = 0.1844400 
degrees of freedom = 2 
p-value = 0.9119045 
               3        4        5
observed 97532.0 2420.000 48.00000
expected 97512.6 2437.815 49.58066
> 
>  mu <- 0.01
>  k <- 2
>  x <- rktp(nsim, k, mu)
>  do.chisq.test(x, k, mu, 4)
chi squared statistic = 0.003075994 
degrees of freedom = 1 
p-value = 0.9557707 
                3        4
observed 99749.00 249.0000
expected 99750.13 249.8749
> 
>  mu <- 1.5
>  xpred <- 0:10
>  save.seed <- .Random.seed
>  x <- rktp(xpred, k, mu, xpred)
>  .Random.seed <- save.seed
>  my.x <- rep(0, length(xpred))
>  for (i in seq(along = xpred))
+      if (xpred[i] > 0)
+          for (j in 1:xpred[i])
+              my.x[i] <- my.x[i] + rktp(1, k, mu)
>  all.equal(x, my.x)
[1] TRUE
> 
>  k <- 5
>  mu <- pi
>  x <- rktp(nsim, k, mu)
>  do.chisq.test(x, k, mu, 14)
chi squared statistic = 4.412303 
degrees of freedom = 8 
p-value = 0.8181414 
                6        7        8        9       10       11       12
observed 58323.00 26152.00 10292.00 3635.000 1166.000 317.0000 86.00000
expected 58366.81 26194.97 10286.74 3590.749 1128.067 322.1752 84.34528
               13       14
observed 25.00000 3.000000
expected 20.38296 5.761997
> 
>  k <- 10
>  mu <- exp(2)
>  x <- rktp(nsim, k, mu)
>  do.chisq.test(x, k, mu, 22)
chi squared statistic = 22.91479 
degrees of freedom = 11 
p-value = 0.01817056 
               11       12       13       14       15       16       17
observed 43048.00 26494.00 15172.00 8231.000 3965.000 1800.000 746.0000
expected 43218.94 26612.26 15126.12 7983.409 3932.657 1816.164 789.3963
               18       19       20       21       22
observed 349.0000 140.0000 36.00000 13.00000 2.000000
expected 324.0497 126.0222 46.55924 16.38233 8.037665
> 
>  cat("number of tests:", save.ntests, "\n")
number of tests: 9 
>  cat("minimum p-value:", save.min.pval, "\n")
minimum p-value: 0.01817056 
>  cat("Bonferroni corrected minimum p-value:",
+      save.ntests * save.min.pval, "\n")
Bonferroni corrected minimum p-value: 0.1635350 
> 
>  #####
> 
>  set.seed(42)
>  nind <- 25
>  nnode <- 1
>  ncoef <- 1
>  k <- 2
> 
>  pred <- 0
>  fam <- 4
>  print(families()[fam])
[1] "two.trunc.poisson"
> 
>  theta <- 4 / 3
>  mu <- exp(theta)
>  x <- rpois(100, mu)
>  x <- x[x > k]
>  x <- x[1:nind]
> 
>  modmat <- matrix(1, nrow = nind, ncol = 1)
>  out <- mlogl(theta, pred, fam, x, modmat, modmat, deriv = 2,
+      type = "conditional")
>  print(out)
$value
[1] -86.3567

$gradient
[1] -14.11330

$hessian
         [,1]
[1,] 60.42326

> 
>  xxx <- seq(0, 100)
>  ppp <- dpois(xxx, mu)
>  ppp[xxx <= k] <- 0
>  ppp <- ppp / sum(ppp)
>  tau <- sum(xxx * ppp)
> 
>  sum(x - tau)
[1] 14.11330
>  max(abs( sum(x - tau) + out$gradient ))
[1] 1.776357e-14
> 
>  length(x) * sum((xxx - tau)^2 * ppp)
[1] 60.42326
> 
>  epsilon <- 1e-6
>  oute <- mlogl(theta + epsilon, pred, fam, x, modmat, modmat, deriv = 2,
+      type = "conditional")
>  (oute$value - out$value) / epsilon
[1] -14.11327
>  all.equal((oute$value - out$value) / epsilon, out$gradient,
+      tol = 10 * epsilon)
[1] TRUE
> 
>  (oute$gradient - out$gradient) / epsilon
[1] 60.42331
>  all.equal((oute$gradient - out$gradient) / epsilon, as.numeric(out$hessian),
+      tol = 10 * epsilon)
[1] TRUE
> 
> 
